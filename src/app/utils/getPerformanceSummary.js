import { connectMongoDB } from "../../../lib/mongodb";
import sale_Report from "../../../models/sale_Report";

export async function getPerformanceSummary(from, to) {
  await connectMongoDB();

  const startDate = new Date(from);
  const endDate = new Date(to);
  endDate.setHours(23, 59, 59, 999);

  const reports = await sale_Report.find({
    report_SubmitAt: { $gte: startDate, $lte: endDate },
  });

  if (!reports.length) return "‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å";

  // ‡∏£‡∏ß‡∏°‡∏ï‡∏≤‡∏°‡∏ß‡∏±‡∏ô
  const dailySummary = {};
  for (const r of reports) {
    const date = r.report_SubmitAt.toISOString().slice(0, 10);
    const bills = r.report_billsSold || 0;

    if (!dailySummary[date]) {
      dailySummary[date] = 0;
    }
    dailySummary[date] += bills;
  }

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏£‡∏∏‡∏õ‡πÅ‡∏ö‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á
  let textTable = `üìã Performance ‡∏à‡∏≤‡∏Å ${from} ‡∏ñ‡∏∂‡∏á ${to}:\n‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà        | ‡∏ö‡∏¥‡∏•‡∏Ç‡∏≤‡∏¢\n-------------|--------`;
  const chartLabels = [];
  const chartData = [];

  for (const date of Object.keys(dailySummary).sort()) {
    textTable += `\n${date}   | ${dailySummary[date]}`;
    chartLabels.push(date.slice(5));
    chartData.push(dailySummary[date]);
  }

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á URL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏£‡∏≤‡∏ü‡∏î‡πâ‡∏ß‡∏¢ QuickChart
  const chartConfig = {
    type: "bar",
    data: {
      labels: chartLabels,
      datasets: [
        {
          label: "‡∏ö‡∏¥‡∏•‡∏Ç‡∏≤‡∏¢",
          data: chartData,
          backgroundColor: "rgba(54, 162, 235, 0.7)"
        }
      ]
    }
  };
  const chartUrl = `https://quickchart.io/chart?c=${encodeURIComponent(JSON.stringify(chartConfig))}`;

  // ‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
  const result = `${textTable}\n\nüìä ‡∏Å‡∏£‡∏≤‡∏ü: ${chartUrl}`;
  return result;
}
