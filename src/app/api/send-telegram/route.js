//api/send-telegram/route.js

import { connectMongoDB } from "../../../../lib/mongodb";
import User from "../../../../models/sale_Report_User";

export async function POST(req) {
  const body = await req.json();
  console.log("üì• Telegram Request Body:", body);

  const TELEGRAM_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
  const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID;

  console.log("üü° Token loaded?", !!TELEGRAM_TOKEN);
  console.log("üü° Chat ID loaded?", TELEGRAM_CHAT_ID);

  // ‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° MongoDB ‡πÅ‡∏•‡∏∞‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ user ‡∏à‡∏≤‡∏Å user_LineID
  await connectMongoDB();
  const user = await User.findOne({ user_LineID: body.user_LineID });

  const userName = user?.user_Name || "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏ä‡∏∑‡πà‡∏≠";
  const userLastname = user?.user_Lastname || "";
  const userPhone = user?.user_Phone || "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡πÄ‡∏ö‡∏≠‡∏£‡πå";

  // ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Telegram
  const message = `
üì¢ ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å LIFF

‡∏£‡∏´‡∏±‡∏™ Report : ${body.report_ID}
‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô: ${userName} ${userLastname}
‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£: ${userPhone}
‡∏£‡πâ‡∏≤‡∏ô: ${body.store_Name}
‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á: ${body.store_Channel}
‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î: ${body.store_Province}
‡πÄ‡∏Ç‡∏ï: ${body.store_Area2}
‡∏ö‡∏±‡∏ç‡∏ä‡∏µ: ${body.store_Account}
`.trim();

  const telegramUrl = `https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage`;

  try {
    const res = await fetch(telegramUrl, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        chat_id: TELEGRAM_CHAT_ID,
        text: message,
        parse_mode: "Markdown",
      }),
    });

    const data = await res.json();
    console.log("üì¨ Telegram Response:", data);

    return new Response(JSON.stringify({ success: data.ok }), {
      status: data.ok ? 200 : 500,
    });
  } catch (error) {
    console.error("‚ùå Error sending to Telegram:", error);
    return new Response(JSON.stringify({ success: false }), {
      status: 500,
    });
  }
}