import sale_Report from "../../../../models/sale_Report";
import { connectMongoDB } from "../../../../lib/mongodb";

export async function getCheerSummaryByChannel(from, to, weekendOnly = false) {
  await connectMongoDB();

  const start = new Date(from);
  const end = new Date(to);
  end.setHours(23,59,59,999);

  // ‡∏Å‡∏£‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
  const filter = {
    report_SubmitAt: { $gte: start, $lte: end },
    report_cheerType: { $exists: true, $ne: "" }
  };

  let reports = await sale_Report.find(filter);

  // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏≠‡∏≤‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏™‡∏≤‡∏£‡πå‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå
  if (weekendOnly) {
    reports = reports.filter(r => {
      const d = new Date(r.report_SubmitAt);
      const day = d.getDay();
      return day === 0 || day === 6;
    });
  }

  // ‡πÅ‡∏¢‡∏Å Channel
  const summaryByChannel = { MT: [], GT: [] };
  reports.forEach(r => {
    const ch = (r.store_Channel || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏").toUpperCase();
    if (ch.includes("MT")) summaryByChannel.MT.push(r);
    else if (ch.includes("GT")) summaryByChannel.GT.push(r);
  });

  // ‡∏™‡∏£‡∏∏‡∏õ‡πÅ‡∏ï‡πà‡∏•‡∏∞ Channel
  function getStats(arr) {
    let totalSample = 0, totalBills = 0;
    arr.forEach(r => {
      totalSample += r.report_sampleCups || 0;
      totalBills += r.report_billsSold || 0;
    });
    return {
      activities: arr.length,
      totalSample,
      totalBills,
      avgSample: arr.length ? (totalSample / arr.length).toFixed(1) : 0,
      avgBills: arr.length ? (totalBills / arr.length).toFixed(1) : 0
    };
  }

  const MT = getStats(summaryByChannel.MT);
  const GT = getStats(summaryByChannel.GT);

  // ‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
  let txt = `üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î‡πÄ‡∏ä‡∏µ‡∏¢‡∏£‡πå‡∏Ç‡∏≤‡∏¢ (${from} ‡∏ñ‡∏∂‡∏á ${to})\n(‡πÄ‡∏â‡∏û‡∏≤‡∏∞${weekendOnly ? "‡πÄ‡∏™‡∏≤‡∏£‡πå-‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå" : "‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô"})\n\n`;
  txt += `„ÄêMT„Äë\n`;
  txt += `- ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: ${MT.activities}\n- ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÅ‡∏à‡∏Å: ${MT.totalSample.toLocaleString()} ‡∏ñ‡πâ‡∏ß‡∏¢\n- ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢: ${MT.totalBills.toLocaleString()} ‡∏ö‡∏¥‡∏•\n- ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢: ${MT.avgSample}/‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°\n- ‡∏ö‡∏¥‡∏•‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢: ${MT.avgBills}/‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°\n\n`;
  txt += `„ÄêGT„Äë\n`;
  txt += `- ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: ${GT.activities}\n- ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÅ‡∏à‡∏Å: ${GT.totalSample.toLocaleString()} ‡∏ñ‡πâ‡∏ß‡∏¢\n- ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢: ${GT.totalBills.toLocaleString()} ‡∏ö‡∏¥‡∏•\n- ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢: ${GT.avgSample}/‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°\n- ‡∏ö‡∏¥‡∏•‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢: ${GT.avgBills}/‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°\n\n`;

  // ‡∏£‡∏ß‡∏° (‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£)
  const ALL = getStats(reports);
  txt += `„Äê‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î„Äë\n`;
  txt += `- ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: ${ALL.activities}\n- ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÅ‡∏à‡∏Å: ${ALL.totalSample.toLocaleString()} ‡∏ñ‡πâ‡∏ß‡∏¢\n- ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢: ${ALL.totalBills.toLocaleString()} ‡∏ö‡∏¥‡∏•\n`;

  return txt;
}
